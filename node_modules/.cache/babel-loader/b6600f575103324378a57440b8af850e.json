{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  cartItems: [],\n  totalQuantity: 0,\n  totalAmount: 0\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addItem(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.cartItems.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n\n      if (!existingItem) {\n        state.cartItems.push({\n          id: newItem.id,\n          title: newItem.title,\n          price: newItem.price,\n          imgUrl: newItem.imgUrl,\n          quantity: 1,\n          totalPrice: newItem.price\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = Number(existingItem.totalPrice) + Number(newItem.price);\n      }\n\n      state.totalAmount = state.cartItems.reduce((total, item) => total + Number(item.price) * Number(item.quantity), 0);\n    },\n\n    removeItem(state, action) {\n      const id = action.payload;\n      const existingItem = state.cartItems.find(item => item.id === id);\n      state.totalQuantity--;\n\n      if (existingItem.quantity === 1) {\n        state.cartItems = state.cartItems.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = Number(existingItem.totalPrice) - Number(existingItem.price);\n      }\n\n      state.totalAmount = state.cartItems.reduce((total, item) => total + Number(item.price) * Number(item.quantity), 0);\n    },\n\n    deleteItem(state, action) {\n      const id = action.payload;\n      const existingItem = state.cartItems.find(item => item.id === id);\n\n      if (existingItem) {\n        state.cartItems = state.cartItems.filter(item => item.id !== id);\n        state.totalQuantity = state.totalQuantity - existingItem.quantity;\n      }\n\n      state.totalAmount = state.cartItems.reduce((total, item) => total + Number(item.quantity) * Number(item.price), 0);\n    }\n\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"sources":["C:/Users/Notorious/Desktop/Car-Rental-Booking-Website-main/src/store/cartSlice.js"],"names":["createSlice","initialState","cartItems","totalQuantity","totalAmount","cartSlice","name","reducers","addItem","state","action","newItem","payload","existingItem","find","item","id","push","title","price","imgUrl","quantity","totalPrice","Number","reduce","total","removeItem","filter","deleteItem","cartActions","actions"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  cartItems: [],\n  totalQuantity: 0,\n  totalAmount: 0,\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n\n  reducers: {\n    addItem(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.cartItems.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n\n      if (!existingItem) {\n        state.cartItems.push({\n          id: newItem.id,\n          title: newItem.title,\n          price: newItem.price,\n          imgUrl: newItem.imgUrl,\n          quantity: 1,\n          totalPrice: newItem.price,\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice =\n          Number(existingItem.totalPrice) + Number(newItem.price);\n      }\n      state.totalAmount = state.cartItems.reduce(\n        (total, item) => total + Number(item.price) * Number(item.quantity),\n        0\n      );\n    },\n\n    removeItem(state, action) {\n      const id = action.payload;\n      const existingItem = state.cartItems.find(item => item.id === id);\n      state.totalQuantity--;\n\n      if (existingItem.quantity === 1) {\n        state.cartItems = state.cartItems.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice =\n          Number(existingItem.totalPrice) - Number(existingItem.price);\n      }\n      state.totalAmount = state.cartItems.reduce(\n        (total, item) => total + Number(item.price) * Number(item.quantity),\n        0\n      );\n    },\n\n    deleteItem(state, action) {\n      const id = action.payload;\n      const existingItem = state.cartItems.find(item => item.id === id);\n\n      if (existingItem) {\n        state.cartItems = state.cartItems.filter(item => item.id !== id);\n        state.totalQuantity = state.totalQuantity - existingItem.quantity;\n      }\n      state.totalAmount = state.cartItems.reduce(\n        (total, item) => total + Number(item.quantity) * Number(item.price),\n        0\n      );\n    },\n  },\n});\n\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;\n"]},"metadata":{},"sourceType":"module"}